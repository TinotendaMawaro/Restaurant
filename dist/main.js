/*! For license information please see main.js.LICENSE.txt */
(()=>{"use strict";var e={426:(e,n,r)=>{r.d(n,{Z:()=>s});var t=r(537),a=r.n(t),i=r(645),o=r.n(i)()(a());o.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Prata&display=swap);"]),o.push([e.id,':root {\r\n  font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,\r\n    Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;\r\n}\r\n*,\r\n*::after,\r\n*::before {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  background-color: #f6f6f6;\r\n  /* height: 200vh; */\r\n}\r\n\r\nheader {\r\n  height: 5rem;\r\n  background-color: rgba(0, 0, 0, 0.9);\r\n  display: flex;\r\n  align-items: center;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n}\r\n\r\nheader img {\r\n  height: 4.5rem;\r\n  margin-right: auto;\r\n}\r\n\r\nheader ul {\r\n  display: flex;\r\n  list-style: none;\r\n  gap: 3rem;\r\n  padding-right: 2rem;\r\n}\r\n\r\nheader li {\r\n  text-decoration: none;\r\n  color: white;\r\n  font-size: 1.5rem;\r\n  padding: 0.5rem 1rem;\r\n}\r\n\r\nheader li:hover {\r\n  cursor: pointer;\r\n  color: #ef7038;\r\n}\r\n\r\nheader li.active {\r\n  background-color: #ef7038;\r\n  border-radius: 1rem;\r\n}\r\n#content {\r\n  width: 50%;\r\n  margin-top: 10rem;\r\n  padding-left: 2rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.bg-image {\r\n  width: 100vw;\r\n  height: auto;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  z-index: -1;\r\n}\r\n\r\nh1 {\r\n  font-family: "Prata", serif;\r\n  font-size: 3rem;\r\n  color: rgb(83, 96, 1);\r\n  margin-bottom: 2rem;\r\n}\r\n\r\np {\r\n  line-height: 1.5rem;\r\n  font-weight: 500;\r\n}\r\n\r\n.menu {\r\n  display: grid;\r\n  grid-template-columns: repeat(3, auto);\r\n  justify-items: center;\r\n  gap: 1rem;\r\n}\r\n\r\n.meal-card {\r\n  width: 300px;\r\n  height: 400px;\r\n  border-radius: 1rem;\r\n  overflow: hidden;\r\n  box-shadow: 0px 1px 5px -1px black;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n}\r\n\r\n.meal-image {\r\n  object-fit: contain;\r\n  width: 100%;\r\n  grid-column: 1 /-1;\r\n}\r\n\r\n.meal-title {\r\n  padding: 0 1rem;\r\n  grid-column: 1/-1;\r\n}\r\n\r\n.meal-description {\r\n  font-size: 0.75rem;\r\n  color: darkgray;\r\n  padding: 0 1rem;\r\n  line-height: 1rem;\r\n  grid-column: 1/-1;\r\n  border-bottom: 1px solid darkgray;\r\n}\r\n\r\n.order {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 0.25rem;\r\n  align-self: stretch;\r\n  padding: 0 1rem;\r\n  border-right: 1px solid darkgray;\r\n}\r\n\r\n.order-icon {\r\n  width: 20px;\r\n  height: 20px;\r\n}\r\n\r\n.order-text {\r\n  font-size: 0.85rem;\r\n}\r\n\r\n.price {\r\n  font-weight: 500;\r\n  align-self: center;\r\n  justify-self: center;\r\n}\r\n\r\n.about {\r\n  display: flex;\r\n  justify-content: space-around;\r\n  gap: 2rem;\r\n  width: 90vw;\r\n}\r\n\r\n.about-image {\r\n  width: 50%;\r\n  height: auto;\r\n}\r\n\r\n.about-text {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1.5rem;\r\n  justify-content: center;\r\n}\r\n\r\n.about-btn {\r\n  padding: 1rem 2rem;\r\n  width: max-content;\r\n  border-radius: 1.5rem;\r\n  cursor: pointer;\r\n}\r\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AACA;EACE;wEACsE;AACxE;AACA;;;EAGE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA;EACE,yBAAyB;EACzB,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,oCAAoC;EACpC,aAAa;EACb,mBAAmB;EACnB,eAAe;EACf,MAAM;EACN,QAAQ;EACR,OAAO;AACT;;AAEA;EACE,cAAc;EACd,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,gBAAgB;EAChB,SAAS;EACT,mBAAmB;AACrB;;AAEA;EACE,qBAAqB;EACrB,YAAY;EACZ,iBAAiB;EACjB,oBAAoB;AACtB;;AAEA;EACE,eAAe;EACf,cAAc;AAChB;;AAEA;EACE,yBAAyB;EACzB,mBAAmB;AACrB;AACA;EACE,UAAU;EACV,iBAAiB;EACjB,kBAAkB;EAClB,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,YAAY;EACZ,kBAAkB;EAClB,MAAM;EACN,QAAQ;EACR,WAAW;AACb;;AAEA;EACE,2BAA2B;EAC3B,eAAe;EACf,qBAAqB;EACrB,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;EACnB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,sCAAsC;EACtC,qBAAqB;EACrB,SAAS;AACX;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,gBAAgB;EAChB,kCAAkC;EAClC,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,mBAAmB;EACnB,WAAW;EACX,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;EAClB,eAAe;EACf,eAAe;EACf,iBAAiB;EACjB,iBAAiB;EACjB,iCAAiC;AACnC;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,YAAY;EACZ,mBAAmB;EACnB,eAAe;EACf,gCAAgC;AAClC;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;EAChB,kBAAkB;EAClB,oBAAoB;AACtB;;AAEA;EACE,aAAa;EACb,6BAA6B;EAC7B,SAAS;EACT,WAAW;AACb;;AAEA;EACE,UAAU;EACV,YAAY;AACd;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,WAAW;EACX,uBAAuB;AACzB;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;EAClB,qBAAqB;EACrB,eAAe;AACjB",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Prata&display=swap");\r\n:root {\r\n  font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,\r\n    Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;\r\n}\r\n*,\r\n*::after,\r\n*::before {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  background-color: #f6f6f6;\r\n  /* height: 200vh; */\r\n}\r\n\r\nheader {\r\n  height: 5rem;\r\n  background-color: rgba(0, 0, 0, 0.9);\r\n  display: flex;\r\n  align-items: center;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n}\r\n\r\nheader img {\r\n  height: 4.5rem;\r\n  margin-right: auto;\r\n}\r\n\r\nheader ul {\r\n  display: flex;\r\n  list-style: none;\r\n  gap: 3rem;\r\n  padding-right: 2rem;\r\n}\r\n\r\nheader li {\r\n  text-decoration: none;\r\n  color: white;\r\n  font-size: 1.5rem;\r\n  padding: 0.5rem 1rem;\r\n}\r\n\r\nheader li:hover {\r\n  cursor: pointer;\r\n  color: #ef7038;\r\n}\r\n\r\nheader li.active {\r\n  background-color: #ef7038;\r\n  border-radius: 1rem;\r\n}\r\n#content {\r\n  width: 50%;\r\n  margin-top: 10rem;\r\n  padding-left: 2rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.bg-image {\r\n  width: 100vw;\r\n  height: auto;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  z-index: -1;\r\n}\r\n\r\nh1 {\r\n  font-family: "Prata", serif;\r\n  font-size: 3rem;\r\n  color: rgb(83, 96, 1);\r\n  margin-bottom: 2rem;\r\n}\r\n\r\np {\r\n  line-height: 1.5rem;\r\n  font-weight: 500;\r\n}\r\n\r\n.menu {\r\n  display: grid;\r\n  grid-template-columns: repeat(3, auto);\r\n  justify-items: center;\r\n  gap: 1rem;\r\n}\r\n\r\n.meal-card {\r\n  width: 300px;\r\n  height: 400px;\r\n  border-radius: 1rem;\r\n  overflow: hidden;\r\n  box-shadow: 0px 1px 5px -1px black;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n}\r\n\r\n.meal-image {\r\n  object-fit: contain;\r\n  width: 100%;\r\n  grid-column: 1 /-1;\r\n}\r\n\r\n.meal-title {\r\n  padding: 0 1rem;\r\n  grid-column: 1/-1;\r\n}\r\n\r\n.meal-description {\r\n  font-size: 0.75rem;\r\n  color: darkgray;\r\n  padding: 0 1rem;\r\n  line-height: 1rem;\r\n  grid-column: 1/-1;\r\n  border-bottom: 1px solid darkgray;\r\n}\r\n\r\n.order {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 0.25rem;\r\n  align-self: stretch;\r\n  padding: 0 1rem;\r\n  border-right: 1px solid darkgray;\r\n}\r\n\r\n.order-icon {\r\n  width: 20px;\r\n  height: 20px;\r\n}\r\n\r\n.order-text {\r\n  font-size: 0.85rem;\r\n}\r\n\r\n.price {\r\n  font-weight: 500;\r\n  align-self: center;\r\n  justify-self: center;\r\n}\r\n\r\n.about {\r\n  display: flex;\r\n  justify-content: space-around;\r\n  gap: 2rem;\r\n  width: 90vw;\r\n}\r\n\r\n.about-image {\r\n  width: 50%;\r\n  height: auto;\r\n}\r\n\r\n.about-text {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1.5rem;\r\n  justify-content: center;\r\n}\r\n\r\n.about-btn {\r\n  padding: 1rem 2rem;\r\n  width: max-content;\r\n  border-radius: 1.5rem;\r\n  cursor: pointer;\r\n}\r\n'],sourceRoot:""}]);const s=o},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var r="",t=void 0!==n[5];return n[4]&&(r+="@supports (".concat(n[4],") {")),n[2]&&(r+="@media ".concat(n[2]," {")),t&&(r+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),r+=e(n),t&&(r+="}"),n[2]&&(r+="}"),n[4]&&(r+="}"),r})).join("")},n.i=function(e,r,t,a,i){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(t)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(o[d]=!0)}for(var c=0;c<e.length;c++){var l=[].concat(e[c]);t&&o[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),r&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=r):l[2]=r),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],r=e[3];if(!r)return n;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),i="/*# ".concat(a," */"),o=r.sources.map((function(e){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(e," */")}));return[n].concat(o).concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function r(e){for(var r=-1,t=0;t<n.length;t++)if(n[t].identifier===e){r=t;break}return r}function t(e,t){for(var i={},o=[],s=0;s<e.length;s++){var d=e[s],c=t.base?d[0]+t.base:d[0],l=i[c]||0,A="".concat(c," ").concat(l);i[c]=l+1;var p=r(A),m={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)n[p].references++,n[p].updater(m);else{var u=a(m,t);t.byIndex=s,n.splice(s,0,{identifier:A,updater:u,references:1})}o.push(A)}return o}function a(e,n){var r=n.domAPI(n);return r.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;r.update(e=n)}else r.remove()}}e.exports=function(e,a){var i=t(e=e||[],a=a||{});return function(e){e=e||[];for(var o=0;o<i.length;o++){var s=r(i[o]);n[s].references--}for(var d=t(e,a),c=0;c<i.length;c++){var l=r(i[c]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}i=d}}},569:e=>{var n={};e.exports=function(e,r){var t=function(e){if(void 0===n[e]){var r=document.querySelector(e);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}n[e]=r}return n[e]}(e);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,r)=>{e.exports=function(e){var n=r.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(r){!function(e,n,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var a=void 0!==r.layer;a&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,a&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var i=r.sourceMap;i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(t,e,n.options)}(n,e,r)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function r(t){var a=n[t];if(void 0!==a)return a.exports;var i=n[t]={id:t,exports:{}};return e[t](i,i.exports,r),i.exports}r.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return r.d(n,{a:n}),n},r.d=(e,n)=>{for(var t in n)r.o(n,t)&&!r.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),r.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;r.g.importScripts&&(e=r.g.location+"");var n=r.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var t=n.getElementsByTagName("script");t.length&&(e=t[t.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=e})(),r.nc=void 0,(()=>{var e=r(379),n=r.n(e),t=r(795),a=r.n(t),i=r(569),o=r.n(i),s=r(565),d=r.n(s),c=r(216),l=r.n(c),A=r(589),p=r.n(A),m=r(426),u={};u.styleTagTransform=p(),u.setAttributes=d(),u.insert=o().bind(null,"head"),u.domAPI=a(),u.insertStyleElement=l(),n()(m.Z,u),m.Z&&m.Z.locals&&m.Z.locals;const h=r.p+"55c0f67dec4371e21498.jpg";function g(){const e=document.createElement("div");e.classList.add("container");const n=document.createElement("h1");n.textContent="Very Luxury Restaurant",e.appendChild(n);const r=document.createElement("p");r.textContent="We want to be your partner for all your food and drink needs. We offer a\n  huge selection of fresh food products for your everyday life, including\n  meat, fresh fish, fruit and vegetables as well as dairy products and\n  snacks. Of course you can rely on our brand's quality requirements with\n  regard to these products: good value for money, no artificial flavorings\n  or preservatives. Our assortment also includes kitchen utensils such as\n  pots and pans, which are important to us in terms of quality and\n  functionality.",e.appendChild(r);const t=new Image;return t.src=h,t.classList.add("bg-image"),e.appendChild(t),e}const f=r.p+"7f76ea937756411d3bff.jpg",C=r.p+"a60de0def2374ea64312.png",E=r.p+"a52e5caf4854032d1b1b.jpg",B=r.p+"aecc37ef85272132447c.jpg",b=r.p+"98fd66b095d9df3b593d.jpg";const y=r.p+"c01cd7dbfceabfa5e06a.jpg",v=document.getElementById("content");v.appendChild(g()),document.querySelector("[data-key='home']").classList.add("active");const x=document.querySelectorAll("li");x.forEach((e=>{e.addEventListener("click",(()=>{switch(x.forEach((e=>e.classList.remove("active"))),e.classList.add("active"),v.textContent="",e.dataset.key){case"home":v.appendChild(g());break;case"menu":v.appendChild(function(){const e=document.createElement("div");return e.classList.add("menu"),e.appendChild(function(){const e=document.createElement("div");e.classList.add("meal-card");const n=new Image;n.src=f,n.classList.add("meal-image"),e.appendChild(n);const r=document.createElement("h3");r.classList.add("meal-title"),r.innerText="Salted egg chicken rice",e.appendChild(r);const t=document.createElement("p");t.classList.add("meal-description"),t.innerText="Lorem ipsum dolor sit amet, consectetur adipisicing elit. Magni accusamus impedit eaque delectus aperiam neque. Tempore nostrum consequatur unde quisquam.",e.appendChild(t);const a=document.createElement("div");a.classList.add("order");const i=new Image;i.src=C,i.classList.add("order-icon"),a.appendChild(i);const o=document.createElement("p");o.classList.add("order-text"),o.innerText="Add to Order",a.appendChild(o),e.appendChild(a);const s=document.createElement("div");return s.classList.add("price"),s.innerText="$16.99",e.appendChild(s),e}()),e.appendChild(function(){const e=document.createElement("div");e.classList.add("meal-card");const n=new Image;n.src=E,n.classList.add("meal-image"),e.appendChild(n);const r=document.createElement("h3");r.classList.add("meal-title"),r.innerText="Vegetabel Salad",e.appendChild(r);const t=document.createElement("p");t.classList.add("meal-description"),t.innerText="Lorem ipsum dolor sit amet, consectetur adipisicing elit. Magni accusamus impedit eaque delectus aperiam neque. Tempore nostrum consequatur unde quisquam.",e.appendChild(t);const a=document.createElement("div");a.classList.add("order");const i=new Image;i.src=C,i.classList.add("order-icon"),a.appendChild(i);const o=document.createElement("p");o.classList.add("order-text"),o.innerText="Add to Order",a.appendChild(o),e.appendChild(a);const s=document.createElement("div");return s.classList.add("price"),s.innerText="$9.99",e.appendChild(s),e}()),e.appendChild(function(){const e=document.createElement("div");e.classList.add("meal-card");const n=new Image;n.src=B,n.classList.add("meal-image"),e.appendChild(n);const r=document.createElement("h3");r.classList.add("meal-title"),r.innerText="Light Dessert",e.appendChild(r);const t=document.createElement("p");t.classList.add("meal-description"),t.innerText="Lorem ipsum dolor sit amet, consectetur adipisicing elit. Magni accusamus impedit eaque delectus aperiam neque. Tempore nostrum consequatur unde quisquam.",e.appendChild(t);const a=document.createElement("div");a.classList.add("order");const i=new Image;i.src=C,i.classList.add("order-icon"),a.appendChild(i);const o=document.createElement("p");o.classList.add("order-text"),o.innerText="Add to Order",a.appendChild(o),e.appendChild(a);const s=document.createElement("div");return s.classList.add("price"),s.innerText="$12.99",e.appendChild(s),e}()),e.appendChild(function(){const e=document.createElement("div");e.classList.add("meal-card");const n=new Image;n.src=b,n.classList.add("meal-image"),e.appendChild(n);const r=document.createElement("h3");r.classList.add("meal-title"),r.innerText="Sushi for Launch",e.appendChild(r);const t=document.createElement("p");t.classList.add("meal-description"),t.innerText="Lorem ipsum dolor sit amet, consectetur adipisicing elit. Magni accusamus impedit eaque delectus aperiam neque. Tempore nostrum consequatur unde quisquam.",e.appendChild(t);const a=document.createElement("div");a.classList.add("order");const i=new Image;i.src=C,i.classList.add("order-icon"),a.appendChild(i);const o=document.createElement("p");o.classList.add("order-text"),o.innerText="Add to Order",a.appendChild(o),e.appendChild(a);const s=document.createElement("div");return s.classList.add("price"),s.innerText="$44.99",e.appendChild(s),e}()),e}());break;case"about":v.appendChild(function(){const e=document.createElement("div");e.classList.add("about");const n=new Image;n.src=y,n.classList.add("about-image"),e.appendChild(n);const r=document.createElement("div");r.classList.add("about-text");const t=document.createElement("h2");t.classList.add("about-title"),t.innerText="About Our Restaurant",r.appendChild(t);const a=document.createElement("p");a.classList.add("about-description"),a.innerText="Lorem ipsum dolor sit amet consectetur adipisicing elit. Mollitia vel, soluta tenetur velit placeat cumque provident repellendus, iure in natus animi voluptates tempora aspernatur sit, ex facere. Delectus, nihil impedit labore dolor at debitis, rem tempora nesciunt illum sed asperiores, incidunt amet architecto magni itaque?",r.appendChild(a);const i=document.createElement("button");return i.classList.add("about-btn"),i.innerText="Learn more →",r.appendChild(i),e.appendChild(r),e}());break;case"contact":v.appendChild(function(){const e=document.createElement("h1");return e.textContent="Contact...",e}())}}))})),console.log("Hello, World!")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,//# sourceMappingURL=data:application/json;charset=utf-8;base64,